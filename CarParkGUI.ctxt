#BlueJ class context
comment0.target=CarParkGUI
comment0.text=\r\n\ CarParkGUI\ class\ represents\ the\ graphical\ user\ interface\ (GUI)\ for\ a\ Car\ Park\ Management\ System.\r\n\ It\ extends\ the\ JFrame\ class\ and\ provides\ functionality\ to\ manage\ parking\ spots,\ park\ cars,\r\n\ find\ cars\ by\ registration\ number\ or\ make,\ remove\ cars,\ and\ reset\ the\ car\ park.\r\n
comment1.params=
comment1.target=CarParkGUI()
comment1.text=\r\n\ Constructor\ for\ the\ CarParkGUI\ class.\r\n\ Initializes\ the\ CarPark\ object,\ sets\ up\ the\ GUI\ components,\ and\ adds\ buttons\ to\ the\ left\ panel.\r\n
comment10.params=spotID
comment10.target=void\ updateOrCreateSpotInfoPanel(java.lang.String)
comment10.text=\r\n\ This\ method\ updates\ the\ existing\ spot\ information\ panel\ if\ it\ exists,\ or\ creates\ a\ new\ one\ if\ it\ doesn't.\r\n\r\n\ @param\ spotID\ The\ ID\ of\ the\ parking\ spot\ to\ update\ or\ create\ the\ panel\ for.\r\n
comment11.params=spotID
comment11.target=void\ updateSpotInfoPanel(java.lang.String)
comment12.params=panel\ spotID
comment12.target=void\ addPanelMouseListener(javax.swing.JPanel,\ java.lang.String)
comment13.params=e
comment13.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment14.params=
comment14.target=void\ findCarByRegistration()
comment14.text=\r\n\ This\ method\ finds\ a\ car\ by\ its\ registration\ number\ and\ displays\ the\ spot\ ID\r\n\ where\ the\ car\ is\ parked.\ If\ the\ car\ is\ not\ found,\ it\ displays\ a\ "Car\ not\ found"\ message.\r\n
comment15.params=
comment15.target=void\ removeCar()
comment15.text=\r\n\ Prompts\ the\ user\ to\ enter\ a\ car\ registration\ number\ and\ removes\ the\ car\ from\ the\ car\ park.\r\n\ Displays\ a\ success\ or\ failure\ message\ and\ updates\ the\ spot\ information\ panel\ if\ the\ car\ is\ removed.\r\n
comment16.params=spotID
comment16.target=javax.swing.JPanel\ getSpotPanelBySpotId(java.lang.String)
comment17.params=spotID
comment17.target=void\ removeSpotInfoPanel(java.lang.String)
comment17.text=\r\n\ Removes\ the\ spot\ information\ panel\ for\ the\ specified\ parking\ spot\ ID\ from\ the\ GUI.\r\n\ It\ iterates\ through\ the\ components\ in\ the\ right\ panel,\ finds\ the\ panel\ containing\r\n\ the\ label\ with\ the\ matching\ spot\ ID,\ and\ removes\ that\ panel\ from\ the\ right\ panel.\r\n\r\n\ @param\ spotID\ The\ ID\ of\ the\ parking\ spot\ whose\ information\ panel\ needs\ to\ be\ removed.\r\n
comment18.params=
comment18.target=void\ findCarsByMake()
comment18.text=\r\n\ Prompts\ the\ user\ to\ enter\ a\ car\ make\ and\ displays\ a\ list\ of\ all\ parking\ spots\r\n\ where\ cars\ of\ that\ make\ are\ parked.\r\n
comment19.params=
comment19.target=void\ resetCarPark()
comment19.text=\r\n\ Resets\ the\ car\ park\ by\ removing\ all\ parking\ spots\ and\ cars.\r\n\ Displays\ a\ success\ message\ after\ resetting\ the\ car\ park.\r\n
comment2.params=text\ tooltip
comment2.target=void\ addButton(java.lang.String,\ java.lang.String)
comment2.text=\r\n\ Method\ to\ add\ a\ button\ to\ the\ left\ panel\ with\ rounded\ corners.\r\n\r\n\ @param\ text\ The\ text\ to\ be\ displayed\ on\ the\ button.\r\n\ @param\ tooltip\ The\ tooltip\ text\ to\ be\ displayed\ when\ hovering\ over\ the\ button.\r\n
comment20.params=panel
comment20.target=void\ updateSpotPanelToEmpty(javax.swing.JPanel)
comment21.params=
comment21.target=void\ exitProgram()
comment21.text=\r\n\ Prompts\ the\ user\ to\ confirm\ exit\ and\ closes\ the\ GUI\ if\ the\ user\ confirms.\r\n
comment22.params=panel\ spot
comment22.target=void\ updatePanelContent(javax.swing.JPanel,\ ParkingSpot)
comment23.params=spotID
comment23.target=void\ addCarToSpot(java.lang.String)
comment24.params=spotID
comment24.target=void\ removeCarFromSpot(java.lang.String)
comment25.params=spotID
comment25.target=void\ deleteSpot(java.lang.String)
comment26.params=panel\ text\ index
comment26.target=void\ addOrUpdateLabel(javax.swing.JPanel,\ java.lang.String,\ int)
comment26.text=\r\n\ Helper\ method\ to\ add\ or\ update\ JLabels\ in\ the\ given\ panel.\r\n\ If\ the\ index\ is\ within\ the\ panel's\ component\ count,\ it\ updates\ the\ existing\ label\ with\ the\ new\ text.\r\n\ Otherwise,\ it\ adds\ a\ new\ label\ with\ the\ provided\ text\ to\ the\ panel.\r\n\r\n\ @param\ panel\ The\ JPanel\ to\ add\ or\ update\ the\ label\ in.\r\n\ @param\ text\ \ The\ text\ to\ set\ for\ the\ label.\r\n\ @param\ index\ The\ index\ of\ the\ label\ to\ update\ or\ add.\r\n
comment27.params=panel\ index
comment27.target=void\ removeLabelIfExists(javax.swing.JPanel,\ int)
comment28.params=parkingTime
comment28.target=java.lang.String\ formatParkingTime(long)
comment29.params=parkingTime
comment29.target=java.lang.String\ calculateParkingDuration(long)
comment3.params=e
comment3.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment30.params=args
comment30.target=void\ main(java.lang.String[])
comment30.text=\r\n\ The\ main\ entry\ point\ of\ the\ application.\r\n\ Creates\ an\ instance\ of\ the\ CarParkGUI\ class\ and\ makes\ it\ visible\ on\ the\ screen.\r\n\r\n\ @param\ args\ The\ command-line\ arguments\ (not\ used\ in\ this\ application).\r\n
comment31.params=
comment31.target=void\ run()
comment4.params=buttonText
comment4.target=void\ handleButtonClick(java.lang.String)
comment4.text=\r\n\ Method\ to\ handle\ button\ click\ events.\r\n\ Calls\ the\ appropriate\ method\ based\ on\ the\ clicked\ button's\ text.\r\n\r\n\ @param\ buttonText\ The\ text\ of\ the\ clicked\ button.\r\n
comment5.params=
comment5.target=void\ addParkingSpot()
comment5.text=\r\n\ This\ method\ handles\ the\ addition\ of\ a\ new\ parking\ spot\ to\ the\ car\ park.\r\n\ It\ prompts\ the\ user\ to\ enter\ a\ spot\ ID,\ validates\ the\ format,\ checks\ for\ duplicates,\r\n\ and\ creates\ a\ new\ ParkingSpot\ object\ if\ the\ input\ is\ valid.\ It\ then\ adds\ the\ new\r\n\ spot\ to\ the\ car\ park\ and\ updates\ the\ spot\ information\ panel.\r\n
comment6.params=spotID
comment6.target=boolean\ isValidSpotID(java.lang.String)
comment6.text=\r\n\ Checks\ if\ the\ provided\ spot\ ID\ follows\ the\ valid\ format\ of\ an\ uppercase\ letter\r\n\ followed\ by\ three\ digits.\r\n\r\n\ @param\ spotID\ The\ spot\ ID\ to\ be\ validated.\r\n\ @return\ true\ if\ the\ spot\ ID\ format\ is\ valid,\ false\ otherwise.\r\n
comment7.params=
comment7.target=void\ deleteParkingSpot()
comment7.text=\r\n\ This\ method\ handles\ the\ deletion\ of\ a\ parking\ spot\ from\ the\ car\ park.\r\n\ It\ prompts\ the\ user\ to\ enter\ a\ spot\ ID,\ and\ if\ the\ spot\ exists,\ it\ removes\r\n\ the\ spot\ from\ the\ car\ park,\ displays\ a\ success\ message,\ and\ removes\ the\r\n\ spot\ information\ panel.\ If\ the\ spot\ does\ not\ exist,\ it\ displays\ an\ error\ message.\r\n
comment8.params=
comment8.target=void\ listAllSpots()
comment8.text=\r\n\ This\ method\ displays\ a\ list\ of\ all\ parking\ spots\ in\ the\ car\ park.\r\n\ For\ each\ spot,\ it\ shows\ the\ spot\ ID,\ occupancy\ status,\ and\ if\ occupied,\r\n\ it\ displays\ the\ registration\ number,\ make,\ model,\ and\ year\ of\ the\ parked\ car.\r\n
comment9.params=
comment9.target=void\ parkCar()
comment9.text=\r\n\ This\ method\ handles\ the\ parking\ of\ a\ car\ in\ the\ car\ park.\r\n\ It\ prompts\ the\ user\ to\ enter\ the\ car's\ registration\ number,\ make,\ model,\ year,\r\n\ and\ the\ spot\ ID\ where\ the\ car\ should\ be\ parked.\ It\ validates\ the\ input\ formats,\r\n\ creates\ a\ new\ Car\ object,\ and\ attempts\ to\ park\ the\ car\ in\ the\ specified\ spot.\r\n\ If\ the\ spot\ does\ not\ exist,\ it\ prompts\ the\ user\ to\ add\ a\ new\ spot\ before\ parking.\r\n\ If\ the\ parking\ is\ successful,\ it\ displays\ a\ success\ message\ and\ updates\ the\ spot\r\n\ information\ panel.\ If\ there\ are\ any\ issues,\ it\ displays\ appropriate\ error\ messages.\r\n
numComments=32
